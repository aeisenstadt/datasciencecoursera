## Check that state and outcome are valid
outcome_col <- numeric()
if (outcome == "heart attack") {
outcome_col <- 11
} else if (outcome == "heart failure"){
outcome_col <- 17
} else if (outcome == "pneumonia"){
outcome_col <- 23
} else {
stop("invalid outcome")
}
state_check <- grep(state, data[,7])
if (length(state_check) == 0) stop("invalid state")
## Return hospital name in that state with the given rank
## 30-day death rate
divide <- split(data, data$State)
byState <- data.frame(divide[grep(state, names(divide))])
rankedframe <- byState[ order(byState[,outcome_col], byState[,2]), ]
if (num == "best") {return(rankedframe[1, 2])}
else if (num == "worst") {return(rankedframe[nrow(rankedframe),2])}
rankedframe[num, 2]
}
rankhospital("TX", "heart failure", 4)
rankhospital <- function(state, outcome, num = "best") {
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv",
colClasses = "character")
## Check that state and outcome are valid
outcome_col <- numeric()
if (outcome == "heart attack") {
outcome_col <- 11
} else if (outcome == "heart failure"){
outcome_col <- 17
} else if (outcome == "pneumonia"){
outcome_col <- 23
} else {
stop("invalid outcome")
}
state_check <- grep(state, data[,7])
if (length(state_check) == 0) stop("invalid state")
## Return hospital name in that state with the given rank
## 30-day death rate
divide <- split(data, data$State)
byState <- data.frame(divide[grep(state, names(divide))])
rankedframe <- byState[ order(-byState[,outcome_col], byState[,2]), ]
if (num == "best") {return(rankedframe[1, 2])}
else if (num == "worst") {return(rankedframe[nrow(rankedframe),2])}
rankedframe[num, 2]
}
rankhospital("TX", "heart failure", 4)
xtfrm?
?xtfrm
rankhospital <- function(state, outcome, num = "best") {
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv",
colClasses = "character")
## Check that state and outcome are valid
outcome_col <- numeric()
if (outcome == "heart attack") {
outcome_col <- 11
} else if (outcome == "heart failure"){
outcome_col <- 17
} else if (outcome == "pneumonia"){
outcome_col <- 23
} else {
stop("invalid outcome")
}
state_check <- grep(state, data[,7])
if (length(state_check) == 0) stop("invalid state")
## Return hospital name in that state with the given rank
## 30-day death rate
divide <- split(data, data$State)
byState <- data.frame(divide[grep(state, names(divide))])
rankedframe <- byState[ order(xtfrm(byState[,outcome_col]), byState[,2]), ]
if (num == "best") {return(rankedframe[1, 2])}
else if (num == "worst") {return(rankedframe[nrow(rankedframe),2])}
rankedframe[num, 2]
}
rankhospital("TX", "heart failure", 4)
byState <- data.frame(mylist[grep("TX", names(mylist))])
head(byState)
nrow(byState)
grep(byState,"DETAR")
rankedframe <- byState[ order(xtfrm(byState[,outcome_col]), byState[,2]), ]
rankedframe
head(rankedframe)
rankedframe <- byState[ order(xtfrm(byState[,17]), byState[,2]), ]
head(rankedframe)
rankedframe <- byState[ order(-xtfrm(byState[,17]), byState[,2]), ]
head(rankedframe)
rankedframe <- byState[ order(xtfrm(byState[,17]), byState[,2]), ]
head(rankedframe)
rankedframe[,17]
byState[,17]
rankedframe <- byState[order(byState[,17])]
rankedframe <- byState[order(byState[,17]),]
rankedframe[,17]
rankedframe[250,17]
rankedframe[251,17]
rankedframe[250,1]
rankedframe[250,2]
rankedframe[251,2]
rankedframe[249,2]
rankedframe <- byState[ order(xtfrm(byState[,outcome_col]), byState[,2]), ]
rankedframe[,17]
rankedframe <- byState[ order(xtfrm(byState[,17]), byState[,2]), ]
rankedframe[,17]
rankedframe[,2]
?grep
grep(rankedframe[,2],"DETAR")
grep("DETAR",rankedframe[,2])
rankedframe[254,17]
rankedframe <- byState[ order(as.numeric(byState[,17]), byState[,2]), ]
rankedframe[,17]
rankedframe[4,2]
rankhospital <- function(state, outcome, num = "best") {
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv",
colClasses = "character")
## Check that state and outcome are valid
outcome_col <- numeric()
if (outcome == "heart attack") {
outcome_col <- 11
} else if (outcome == "heart failure"){
outcome_col <- 17
} else if (outcome == "pneumonia"){
outcome_col <- 23
} else {
stop("invalid outcome")
}
state_check <- grep(state, data[,7])
if (length(state_check) == 0) stop("invalid state")
## Return hospital name in that state with the given rank
## 30-day death rate
divide <- split(data, data$State)
byState <- data.frame(divide[grep(state, names(divide))])
rankedframe <- byState[ order(as.numeric(byState[,outcome_col]), byState[,2]), ]
if (num == "best") {return(rankedframe[1, 2])}
else if (num == "worst") {return(rankedframe[nrow(rankedframe),2])}
rankedframe[num, 2]
}
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
rankhospital("MN", "heart attack", 5000)
byState <- data.frame(mylist[grep("MD", names(mylist))])
rankedframe <- byState[ order(as.numeric(byState[,11]), byState[,2]), ]
rankedframe[,11]
nrow(rankedframe)
rankedframe[45,2]
rankedframe[41,2]
?nrow
natest <- nrow(rankedframe)
natest
while (rankedframe[natest,outcome_col] == "NA") {
natest <- natest - 1
}
natest
while (rankedframe[natest,11] == "NA") {
natest <- natest - 1
}
?if.na
?is.na
while (is.na(rankedframe[natest,outcome_col])) {
natest <- natest - 1
}
natest
while (is.na(rankedframe[natest,11])) {
natest <- natest - 1
}
natest
rankhospital <- function(state, outcome, num = "best") {
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv",
colClasses = "character")
## Check that state and outcome are valid
outcome_col <- numeric()
if (outcome == "heart attack") {
outcome_col <- 11
} else if (outcome == "heart failure"){
outcome_col <- 17
} else if (outcome == "pneumonia"){
outcome_col <- 23
} else {
stop("invalid outcome")
}
state_check <- grep(state, data[,7])
if (length(state_check) == 0) stop("invalid state")
## Return hospital name in that state with the given rank
## 30-day death rate
divide <- split(data, data$State)
byState <- data.frame(divide[grep(state, names(divide))])
rankedframe <- byState[ order(as.numeric(byState[,outcome_col]), byState[,2]), ]
if (num == "best") {return(rankedframe[1, 2])}
else if (num == "worst") {
natest <- nrow(rankedframe)
while (is.na(rankedframe[natest,outcome_col])) {
natest <- natest - 1
}
return(rankedframe[natest,2])}
rankedframe[num, 2]
}
rankhospital("MD", "heart attack", "worst")
rankedframe[,2]
natest <- nrow(rankedframe)
natest
is.na(rankedframe[natest,outcome_col])
is.na(rankedframe[natest,11])
while (is.na(rankedframe[natest,outcome_col])) {
natest <- natest - 1
}
rankedframe[natest,2])
rankedframe[natest,2]
natest
while (is.na(rankedframe[natest,outcome_col])) {
natest <- natest - 1
}
while (is.na(rankedframe[natest,11) {
natest <- natest - 1
}
while (is.na(rankedframe[natest,11)) {
natest <- natest - 1
}
while (is.na(rankedframe[natest,11])) {
natest <- natest - 1
}
natest
rankedframe[natest,2]
rankhospital("MD", "heart attack", "worst")
natest <- nrow(rankedframe)
while (is.na(rankedframe[natest,outcome_col])) {
natest <- natest - 1
}
return(rankedframe[natest,2])}
natest <- nrow(rankedframe)
while (is.na(rankedframe[natest,outcome_col])) {
natest <- natest - 1
}
rankedframe[natest,2]
natest <- nrow(rankedframe)
natest <- nrow(rankedframe)
while (is.na(rankedframe[natest,11])) {
natest <- natest - 1
}
rankedframe[natest,2]
rankhospital <- function(state, outcome, num = "best") {
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv",
colClasses = "character")
## Check that state and outcome are valid
outcome_col <- numeric()
if (outcome == "heart attack") {
outcome_col <- 11
} else if (outcome == "heart failure"){
outcome_col <- 17
} else if (outcome == "pneumonia"){
outcome_col <- 23
} else {
stop("invalid outcome")
}
state_check <- grep(state, data[,7])
if (length(state_check) == 0) stop("invalid state")
## Return hospital name in that state with the given rank
## 30-day death rate
divide <- split(data, data$State)
byState <- data.frame(divide[grep(state, names(divide))])
rankedframe <- byState[ order(as.numeric(byState[,outcome_col]), byState[,2]), ]
if (num == "best") {return(rankedframe[1, 2])}
else if (num == "worst") {
natest <- nrow(rankedframe)
while (is.na(rankedframe[natest,outcome_col])) {
natest <- natest - 1
}
return(rankedframe[natest,2])}
rankedframe[num, 2]
}
rankhospital("MD", "heart attack", "worst")
natest <- nrow(rankedframe)
while (is.na(rankedframe[natest,11])) {
natest <- natest - 1
}
return(rankedframe[natest,2])
rankhospital <- function(state, outcome, num = "best") {
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv",
colClasses = "character")
## Check that state and outcome are valid
outcome_col <- numeric()
if (outcome == "heart attack") {
outcome_col <- 11
} else if (outcome == "heart failure"){
outcome_col <- 17
} else if (outcome == "pneumonia"){
outcome_col <- 23
} else {
stop("invalid outcome")
}
state_check <- grep(state, data[,7])
if (length(state_check) == 0) stop("invalid state")
## Return hospital name in that state with the given rank
## 30-day death rate
divide <- split(data, data$State)
byState <- data.frame(divide[grep(state, names(divide))])
rankedframe <- byState[ order(as.numeric(byState[,outcome_col]), byState[,2]), ]
if (num == "best") {return(rankedframe[1, 2])}
else if (num == "worst") {
natest <- nrow(rankedframe)
while (is.na(rankedframe[natest,outcome_col])) {
natest <- natest - 1
}
final <- natest
return(rankedframe[final,2])}
rankedframe[num, 2]
}
rankhospital("MD", "heart attack", "worst")
natest <- nrow(rankedframe)
while (is.na(rankedframe[natest,outcome_col])) {
natest <- natest - 1
}
final <- natest
return(rankedframe[final,2])
natest <- nrow(rankedframe)
while (is.na(rankedframe[natest,11
])) {
natest <- natest - 1
}
final <- natest
rankedframe[final,2]
rankhospital <- function(state, outcome, num = "best") {
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv",
colClasses = "character")
## Check that state and outcome are valid
outcome_col <- numeric()
if (outcome == "heart attack") {
outcome_col <- 11
} else if (outcome == "heart failure"){
outcome_col <- 17
} else if (outcome == "pneumonia"){
outcome_col <- 23
} else {
stop("invalid outcome")
}
state_check <- grep(state, data[,7])
if (length(state_check) == 0) stop("invalid state")
## Return hospital name in that state with the given rank
## 30-day death rate
divide <- split(data, data$State)
byState <- data.frame(divide[grep(state, names(divide))])
rankedframe <- byState[ order(as.numeric(byState[,outcome_col]), byState[,2]), ]
if (num == "best") {return(rankedframe[1, 2])}
else if (num == "worst") {
natest <- nrow(rankedframe)
while (is.na(rankedframe[natest,outcome_col])) {
natest <- natest - 1
}
final <- rankedframe[natest,2]
return(final)}
rankedframe[num, 2]
}
rankhospital("MD", "heart attack", "worst")
natest <- nrow(rankedframe)
while (is.na(rankedframe[natest,outcome_col])) {
natest <- natest - 1
}
final <- rankedframe[natest,2]
final
natest
natest <- nrow(rankedframe)
while (is.na(rankedframe[natest,11])) {
natest <- natest - 1
}
final <- rankedframe[natest,2]
natest <- nrow(rankedframe)
while (is.na(rankedframe[natest,11])) {
natest <- natest - 1
}
final <- rankedframe[natest,2]
final
rankhospital("MD", "heart attack", "worst")
?data.frame
?length
length(mylist)
rankall <- function(outcome, num = "best") {
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv",
colClasses = "character")
## Check that state and outcome are valid
outcome_col <- numeric()
if (outcome == "heart attack") {
outcome_col <- 11
} else if (outcome == "heart failure"){
outcome_col <- 17
} else if (outcome == "pneumonia"){
outcome_col <- 23
} else {
stop("invalid outcome")
}
## For each state, find the hospital of the given rank
divide <- split(data, data$State)
final <- data.frame("State name" = 1:length(divide), "Best Hospital" =
1:length(divide))
for( i in divide){
final[i,2] <- rankhospital(i, outcome, "best")
}
## Return a data frame with the hospital names and the
## (abbreviated) state name
final
}
head(rankall("heart attack", 20), 10)
mylist$name
mylist[2]
names(mylist)
names(mylist)[3]
rankall <- function(outcome, num = "best") {
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv",
colClasses = "character")
## Check that state and outcome are valid
outcome_col <- numeric()
if (outcome == "heart attack") {
outcome_col <- 11
} else if (outcome == "heart failure"){
outcome_col <- 17
} else if (outcome == "pneumonia"){
outcome_col <- 23
} else {
stop("invalid outcome")
}
## For each state, find the hospital of the given rank
divide <- split(data, data$State)
final <- data.frame("State name" = 1:length(divide), "Best Hospital" =
1:length(divide))
for( i in divide){
final[i,2] <- rankhospital(names(divide)[i], outcome, "best")
}
## Return a data frame with the hospital names and the
## (abbreviated) state name
final
}
head(rankall("heart attack", 20), 10)
for (i in mylist) { print 1}
for (i in mylist) { print "Hi"}
rankall <- function(outcome, num = "best") {
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv",
colClasses = "character")
## Check that state and outcome are valid
outcome_col <- numeric()
if (outcome == "heart attack") {
outcome_col <- 11
} else if (outcome == "heart failure"){
outcome_col <- 17
} else if (outcome == "pneumonia"){
outcome_col <- 23
} else {
stop("invalid outcome")
}
## For each state, find the hospital of the given rank
divide <- split(data, data$State)
final <- data.frame("State name" = 1:length(divide), "Best Hospital" =
1:length(divide))
for( i in length(divide)){
final[i,2] <- rankhospital(names(divide)[i], outcome, "best")
}
## Return a data frame with the hospital names and the
## (abbreviated) state name
final
}
head(rankall("heart attack", 20), 10)
rankall <- function(outcome, num = "best") {
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv",
colClasses = "character")
## Check that state and outcome are valid
outcome_col <- numeric()
if (outcome == "heart attack") {
outcome_col <- 11
} else if (outcome == "heart failure"){
outcome_col <- 17
} else if (outcome == "pneumonia"){
outcome_col <- 23
} else {
stop("invalid outcome")
}
## For each state, find the hospital of the given rank
divide <- split(data, data$State)
final <- data.frame("State name" = 1:length(divide), "Best Hospital" =
1:length(divide))
for( i in 1:length(divide)){
final[i,2] <- rankhospital(names(divide)[i], outcome, "best")
final[i,1] <- names(divide)[i]
}
## Return a data frame with the hospital names and the
## (abbreviated) state name
final
}
head(rankall("heart attack", 20), 10)
rankhospital("AK", "heart attack", "best")
byState <- data.frame(myist[grep("AK", names(mylist))])
byState <- data.frame(mylist[grep("AK", names(mylist))])
rankedframe <- byState[ order(as.numeric(byState[,11]), byState[,2]), ]
rankedframe[,2]
rankedframe[,11]
best("SC", "heart attack")
best("NY", "pneumonia")
best("AK", "pneumonia")
rankhospital("NC", "heart attack", "worst")
rankhospital("WA", "heart attack", 7)
rankhospital("TX", "pneumonia", 10)
rankhospital("NY", "heart attack", 7)
r <- rankall("heart attack", 4)
as.character(subset(r, state == "HI")$hospital)
