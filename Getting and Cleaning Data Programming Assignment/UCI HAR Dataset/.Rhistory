colnames(subjectTrain) <- c("Subject Number")
subjectTrain
valuesTrain <- rep("x", 7352)
valuesTrain <- cbind(subjectTrain, activitiesTrain, valuesTrain)
valuesTrain <- cbind(subjectTrain, activitiesTrain, valuesTrain)
rm(list=ls())
splitNames <- strsplit(rawVariableNames[[1]], ". ")
getwd()
setwd("/Users/AnchBot/Dropbox/Third Plateau/Management/HR/Staff Files/Ari 2.0/
Professional Development/Data Science Specialization/datasciencecoursera/
Getting and Cleaning Data Programming Assignment/UCI HAR Dataset")
paste("hello", "hi")
paste("/Users", "/AnchBot")
paste("/Users", "/AnchBot", sep="")
rawVariableNames <- read_table(paste(pathToFile, "./features.txt", sep=""),
col_names = FALSE)
pathToFile <- "/Users/AnchBot/Dropbox/Third Plateau/Management/HR/
Staff Files/Ari 2.0/Professional Development/Data Science Specialization/
datasciencecoursera/Getting and Cleaning Data Programming Assignment/
UCI HAR Dataset"
subjectTest <- read_table(paste(pathToFile, "./test/subject_test.txt", sep="")
, col_names = FALSE)
rawVariableNames <- read_table(paste(pathToFile, "/features.txt", sep=""),
col_names = FALSE)
rm(list=ls())
valuesTest <- read_table(paste(pathToFile, "./test/X_test.txt", sep=""),
col_names = FALSE)
pathToFile <- c("/Users/AnchBot/Dropbox/Third Plateau/Management/HR/
Staff Files/Ari 2.0/Professional Development/Data Science Specialization/
datasciencecoursera/Getting and Cleaning Data Programming Assignment/
UCI HAR Dataset")
rm(pathToFile)
return(valuesTrain)
return(1)
print(valuesTrain)
pathToFile <- c("/Users/AnchBot/Dropbox/Third Plateau/Management/HR/
Staff Files/Ari 2.0/Professional Development/Data Science Specialization/
datasciencecoursera/Getting and Cleaning Data Programming Assignment/
UCI HAR Dataset")
subjectTest <- read_table(paste(pathToFile, "./test/subject_test.txt", sep="")
, col_names = FALSE)
valuesTest <- read_table(paste(pathToFile, "./test/X_test.txt", sep=""),
col_names = FALSE)
activitiesTest <- read_table(paste(pathToFile, "./test/y_test.txt", sep=""),
col_names = FALSE)
subjectTrain <- read_table(paste(pathToFile, "./train/subject_train.txt",
sep=""), col_names = FALSE)
valuesTrain <- read_table(paste(pathToFile, "./train/X_train.txt", sep=""),
col_names = FALSE)
activitiesTrain <- read_table(paste(pathToFile, "./train/y_train.txt", sep=""),
col_names = FALSE)
rawVariableNames <- read_table(paste(pathToFile, "/features.txt", sep=""),
col_names = FALSE)
paste(pathToFile, "/features.txt", sep="")
paste0(pathToFile, "/features.txt", sep="")
?paste
paste0(pathToFile, "/features.txt", collapse="")
paste(pathToFile, "/features.txt", collapse="")
pathToFile
rm(list=ls())
pathToFile <- c("/Users/AnchBot/Dropbox/Third Plateau/Management/HR/Staff Files/Ari 2.0/Professional Development/Data Science Specialization/datasciencecoursera/Getting and Cleaning Data Programming Assignment/UCI HAR Dataset")
pathToFile <- c("/Users/AnchBot/Dropbox/Third Plateau/Management/HR/Staff Files/Ari 2.0/Professional Development/Data Science Specialization/datasciencecoursera/Getting and Cleaning Data Programming Assignment/UCI HAR Dataset")
subjectTest <- read_table(paste(pathToFile, "./test/subject_test.txt", sep="")
, col_names = FALSE)
valuesTest <- read_table(paste(pathToFile, "./test/X_test.txt", sep=""),
col_names = FALSE)
activitiesTest <- read_table(paste(pathToFile, "./test/y_test.txt", sep=""),
col_names = FALSE)
subjectTrain <- read_table(paste(pathToFile, "./train/subject_train.txt",
sep=""), col_names = FALSE)
valuesTrain <- read_table(paste(pathToFile, "./train/X_train.txt", sep=""),
col_names = FALSE)
activitiesTrain <- read_table(paste(pathToFile, "./train/y_train.txt", sep=""),
col_names = FALSE)
rawVariableNames <- read_table(paste(pathToFile, "/features.txt", sep=""),
col_names = FALSE)
activitiesTrain <- read_table(paste(pathToFile, "/train/y_train.txt", sep=""),
col_names = FALSE)
rm(list=ls())
pathToFile <- c("/Users/AnchBot/Dropbox/Third Plateau/Management/HR/Staff Files/Ari 2.0/Professional Development/Data Science Specialization/datasciencecoursera/Getting and Cleaning Data Programming Assignment/UCI HAR Dataset")
subjectTest <- read_table(paste(pathToFile, "/test/subject_test.txt", sep="")
, col_names = FALSE)
valuesTest <- read_table(paste(pathToFile, "/test/X_test.txt", sep=""),
col_names = FALSE)
activitiesTest <- read_table(paste(pathToFile, "/test/y_test.txt", sep=""),
col_names = FALSE)
subjectTrain <- read_table(paste(pathToFile, "/train/subject_train.txt",
sep=""), col_names = FALSE)
valuesTrain <- read_table(paste(pathToFile, "/train/X_train.txt", sep=""),
col_names = FALSE)
activitiesTrain <- read_table(paste(pathToFile, "/train/y_train.txt", sep=""),
col_names = FALSE)
rawVariableNames <- read_table(paste(pathToFile, "/features.txt", sep=""),
col_names = FALSE)
splitNames <- strsplit(rawVariableNames[[1]], ". ")
secondElement <- function(x){x[2]}
cleanVariableNames <- sapply(splitNames, secondElement)
colnames(valuesTest) <- cleanVariableNames
colnames(subjectTest) <- c("Subject Number")
colnames(activitiesTest) <- c("Activity Number")
valuesTest <- cbind(subjectTest, activitiesTest, valuesTest)
valuesTest
colnames(valuesTrain) <- cleanVariableNames
colnames(subjectTrain) <- c("Subject Number")
colnames(activitiesTrain) <- c("Activity Number")
valuesTrain <- cbind(subjectTrain, activitiesTrain, valuesTrain)
rm(list=ls())
?merge
library(readr)
library(dplyr)
## Load files
pathToFile <- c("/Users/AnchBot/Dropbox/Third Plateau/Management/HR/Staff Files/Ari 2.0/Professional Development/Data Science Specialization/datasciencecoursera/Getting and Cleaning Data Programming Assignment/UCI HAR Dataset")
subjectTest <- read_table(paste(pathToFile, "/test/subject_test.txt", sep="")
, col_names = FALSE)
valuesTest <- read_table(paste(pathToFile, "/test/X_test.txt", sep=""),
col_names = FALSE)
activitiesTest <- read_table(paste(pathToFile, "/test/y_test.txt", sep=""),
col_names = FALSE)
subjectTrain <- read_table(paste(pathToFile, "/train/subject_train.txt",
sep=""), col_names = FALSE)
valuesTrain <- read_table(paste(pathToFile, "/train/X_train.txt", sep=""),
col_names = FALSE)
activitiesTrain <- read_table(paste(pathToFile, "/train/y_train.txt", sep=""),
col_names = FALSE)
rawVariableNames <- read_table(paste(pathToFile, "/features.txt", sep=""),
col_names = FALSE)
## Find variable names
splitNames <- strsplit(rawVariableNames[[1]], ". ")
secondElement <- function(x){x[2]}
cleanVariableNames <- sapply(splitNames, secondElement)
## Apply variable names
colnames(valuesTest) <- cleanVariableNames
colnames(subjectTest) <- c("Subject Number")
colnames(activitiesTest) <- c("Activity Number")
colnames(valuesTrain) <- cleanVariableNames
colnames(subjectTrain) <- c("Subject Number")
colnames(activitiesTrain) <- c("Activity Number")
# Merge dataframes
valuesTest <- cbind(subjectTest, activitiesTest, valuesTest)
valuesTrain <- cbind(subjectTrain, activitiesTrain, valuesTrain)
values <- rbind(valuesTest, valuesTrain)
names(values)
grep("mean", names(values))
values[,grep("mean", names(values))]
tidyValues <- cbind(values[,1:2], values[,grep("mean", names(values))],
values[,grep("std", names(values))])
names(tidyValues)
tidyValues[,2 == 1] <- "WALKING"
tidyValues[,2]
activityLabels <- read_table(paste(pathToFile, "/activity_labels.txt", sep=""),
col_names = FALSE)
activityLabels
tidyValues["Activity"] <- activityLabels[ match(tidyValues[['Activity']],
activityLabels[['X1']] )
, 'X2']
tidyValues$Activity
tidyValues["Activity Number"] <- activityLabels[ match(tidyValues[['Activity Number']],
activityLabels[['X1']] )
, 'X2']
tidyValues$`Activity Number`
names(tidyValues)
head(tidyValues$`Activity Number`)
?strtrim
?trim
sub(“tBodyAcc”, “Linear Acceleration”, names(tidyValues))
sub(“tBodyAcc”, “Linear Acceleration”, names(tidyValues),)
?sub
sub("t","",names(tidyValues))
names(tidyValues)
sub("tB","",names(tidyValues))
sub("tB","hello",names(tidyValues))
sub("tBodyAcc","Linear Acceleration",names(tidyValues))
sub("tBodyAcc-","Linear Acceleration-",names(tidyValues))
sub("tBodyAccJerk-","Linear Jerk-",names(tidyValues))
colnames(tidyValues) <- sub("tBodyAcc-","Linear Acceleration-",names(tidyValues))
colnames(tidyValues) <- sub("tBodyAccMag-","Linear Acceleration-",names(tidyValues))
colnames(tidyValues) <- sub("tBodyAccJerk-","Linear Jerk-",names(tidyValues))
colnames(tidyValues) <- sub("tBodyAccJerkMag-","Linear Jerk-",names(tidyValues))
colnames(tidyValues) <- sub("tGravityAcc-","Gravitational Acceleration-",names(tidyValues))
colnames(tidyValues) <- sub("tGravityAccMag-","Gravitational Acceleration-",names(tidyValues))
colnames(tidyValues) <- sub("tBodyGyro-","Angular Velocity-",names(tidyValues))
colnames(tidyValues) <- sub("tBodyGyroMag-","Angular Velocity-",names(tidyValues))
colnames(tidyValues) <- sub("tBodyGyroJerk-","Angular Jerk-",names(tidyValues))
colnames(tidyValues) <- sub("tBodyGyroJerkMag-","Angular Jerk-",names(tidyValues))
colnames(tidyValues) <- sub("fBodyAcc-","Fourier Linear Acceleration-",names(tidyValues))
colnames(tidyValues) <- sub("fBodyAccMag-","Fourier Linear Acceleration-",names(tidyValues))
colnames(tidyValues) <- sub("fBodyAccJerk-","Fourier Linear Jerk-",names(tidyValues))
colnames(tidyValues) <- sub("fBodyAccJerkMag-","Fourier Linear Jerk-",names(tidyValues))
colnames(tidyValues) <- sub("fBodyGyro-","Fourier Angular Velocity-",names(tidyValues))
colnames(tidyValues) <- sub("fBodyGyroMag-","Fourier Angular Velocity-",names(tidyValues))
colnames(tidyValues) <- sub("fBodyGyroJerkMag-","Fourier Angular Jerk-",names(tidyValues))
names(tidyValues)
names(tidyValues)
colnames(tidyValues) <- sub("std", "stddev", names(tidyValues))
colnames(tidyValues) <- sub("std", "stddev", names(tidyValues))
names(tidyValues)
cleanVariableNames
rm(list=ls())
library(readr)
library(dplyr)
## Load files
pathToFile <- c("/Users/AnchBot/Dropbox/Third Plateau/Management/HR/Staff Files/Ari 2.0/Professional Development/Data Science Specialization/datasciencecoursera/Getting and Cleaning Data Programming Assignment/UCI HAR Dataset")
subjectTest <- read_table(paste(pathToFile, "/test/subject_test.txt", sep="")
, col_names = FALSE)
valuesTest <- read_table(paste(pathToFile, "/test/X_test.txt", sep=""),
col_names = FALSE)
activitiesTest <- read_table(paste(pathToFile, "/test/y_test.txt", sep=""),
col_names = FALSE)
subjectTrain <- read_table(paste(pathToFile, "/train/subject_train.txt",
sep=""), col_names = FALSE)
valuesTrain <- read_table(paste(pathToFile, "/train/X_train.txt", sep=""),
col_names = FALSE)
activitiesTrain <- read_table(paste(pathToFile, "/train/y_train.txt", sep=""),
col_names = FALSE)
activityLabels <- read_table(paste(pathToFile, "/activity_labels.txt", sep=""),
col_names = FALSE)
rawVariableNames <- read_table(paste(pathToFile, "/features.txt", sep=""),
col_names = FALSE)
## Find variable names
splitNames <- strsplit(rawVariableNames[[1]], ". ")
secondElement <- function(x){x[2]}
cleanVariableNames <- sapply(splitNames, secondElement)
## Apply variable names
colnames(valuesTest) <- cleanVariableNames
colnames(subjectTest) <- c("Subject Number")
colnames(activitiesTest) <- c("Activity")
colnames(valuesTrain) <- cleanVariableNames
colnames(subjectTrain) <- c("Subject Number")
colnames(activitiesTrain) <- c("Activity Number")
## Merge dataframes
valuesTest <- cbind(subjectTest, activitiesTest, valuesTest)
valuesTrain <- cbind(subjectTrain, activitiesTrain, valuesTrain)
values <- rbind(valuesTest, valuesTrain)
## Extract mean and standard deviation
tidyValues <- cbind(values[,1:2], values[,grep("mean", names(values))],
values[,grep("std", names(values))])
## Fix Activity Names
tidyValues["Activity"] <- activityLabels[ match(tidyValues[['Activity']],
activityLabels[['X1']] )
, 'X2']
## Replace Variable Names
colnames(tidyValues) <- sub("tBodyAcc-","Linear Acceleration-",names(tidyValues))
colnames(tidyValues) <- sub("tBodyAccMag-","Linear Acceleration Magnitude-",names(tidyValues))
colnames(tidyValues) <- sub("tBodyAccJerk-","Linear Jerk-",names(tidyValues))
colnames(tidyValues) <- sub("tBodyAccJerkMag-","Linear Jerk Magnitude-",names(tidyValues))
colnames(tidyValues) <- sub("tGravityAcc-","Gravitational Acceleration-",names(tidyValues))
colnames(tidyValues) <- sub("tGravityAccMag-","Gravitational Acceleration Magnitude-",names(tidyValues))
colnames(tidyValues) <- sub("tBodyGyro-","Angular Velocity-",names(tidyValues))
colnames(tidyValues) <- sub("tBodyGyroMag-","Angular Velocity Magnitude-",names(tidyValues))
colnames(tidyValues) <- sub("tBodyGyroJerk-","Angular Jerk-",names(tidyValues))
colnames(tidyValues) <- sub("tBodyGyroJerkMag-","Angular Jerk Magnitude-",names(tidyValues))
colnames(tidyValues) <- sub("fBodyAcc-","Fourier Linear Acceleration-",names(tidyValues))
colnames(tidyValues) <- sub("fBodyAccMag-","Fourier Linear Acceleration Magnitude-",names(tidyValues))
colnames(tidyValues) <- sub("fBodyAccJerk-","Fourier Linear Jerk-",names(tidyValues))
colnames(tidyValues) <- sub("fBodyAccJerkMag-","Fourier Linear Jerk Magnitude-",names(tidyValues))
colnames(tidyValues) <- sub("fBodyGyro-","Fourier Angular Velocity-",names(tidyValues))
colnames(tidyValues) <- sub("fBodyGyroMag-","Fourier Angular Velocity Magnitude-",names(tidyValues))
colnames(tidyValues) <- sub("fBodyGyroJerkMag-","Fourier Angular Jerk Magnitude-",names(tidyValues))
colnames(tidyValues) <- sub("std", "stddev", names(tidyValues))
names(valuesTest)
names(valuesTrain)
rm(list=ls())
library(readr)
library(dplyr)
## Load files
pathToFile <- c("/Users/AnchBot/Dropbox/Third Plateau/Management/HR/Staff Files/Ari 2.0/Professional Development/Data Science Specialization/datasciencecoursera/Getting and Cleaning Data Programming Assignment/UCI HAR Dataset")
subjectTest <- read_table(paste(pathToFile, "/test/subject_test.txt", sep="")
, col_names = FALSE)
valuesTest <- read_table(paste(pathToFile, "/test/X_test.txt", sep=""),
col_names = FALSE)
activitiesTest <- read_table(paste(pathToFile, "/test/y_test.txt", sep=""),
col_names = FALSE)
subjectTrain <- read_table(paste(pathToFile, "/train/subject_train.txt",
sep=""), col_names = FALSE)
valuesTrain <- read_table(paste(pathToFile, "/train/X_train.txt", sep=""),
col_names = FALSE)
activitiesTrain <- read_table(paste(pathToFile, "/train/y_train.txt", sep=""),
col_names = FALSE)
activityLabels <- read_table(paste(pathToFile, "/activity_labels.txt", sep=""),
col_names = FALSE)
rawVariableNames <- read_table(paste(pathToFile, "/features.txt", sep=""),
col_names = FALSE)
## Find variable names
splitNames <- strsplit(rawVariableNames[[1]], ". ")
secondElement <- function(x){x[2]}
cleanVariableNames <- sapply(splitNames, secondElement)
## Apply variable names
colnames(valuesTest) <- cleanVariableNames
colnames(subjectTest) <- c("Subject Number")
colnames(activitiesTest) <- c("Activity")
colnames(valuesTrain) <- cleanVariableNames
colnames(subjectTrain) <- c("Subject Number")
colnames(activitiesTrain) <- c("Activity Number")
## Merge dataframes
valuesTest <- cbind(subjectTest, activitiesTest, valuesTest)
valuesTrain <- cbind(subjectTrain, activitiesTrain, valuesTrain)
values <- rbind(valuesTest, valuesTrain)
## Extract mean and standard deviation
tidyValues <- cbind(values[,1:2], values[,grep("mean", names(values))],
values[,grep("std", names(values))])
## Fix Activity Names
tidyValues["Activity"] <- activityLabels[ match(tidyValues[['Activity']],
activityLabels[['X1']] )
, 'X2']
## Replace Variable Names
colnames(tidyValues) <- sub("tBodyAcc-","Linear Acceleration-",names(tidyValues))
colnames(tidyValues) <- sub("tBodyAccMag-","Linear Acceleration Magnitude-",names(tidyValues))
colnames(tidyValues) <- sub("tBodyAccJerk-","Linear Jerk-",names(tidyValues))
colnames(tidyValues) <- sub("tBodyAccJerkMag-","Linear Jerk Magnitude-",names(tidyValues))
colnames(tidyValues) <- sub("tGravityAcc-","Gravitational Acceleration-",names(tidyValues))
colnames(tidyValues) <- sub("tGravityAccMag-","Gravitational Acceleration Magnitude-",names(tidyValues))
colnames(tidyValues) <- sub("tBodyGyro-","Angular Velocity-",names(tidyValues))
colnames(tidyValues) <- sub("tBodyGyroMag-","Angular Velocity Magnitude-",names(tidyValues))
colnames(tidyValues) <- sub("tBodyGyroJerk-","Angular Jerk-",names(tidyValues))
colnames(tidyValues) <- sub("tBodyGyroJerkMag-","Angular Jerk Magnitude-",names(tidyValues))
colnames(tidyValues) <- sub("fBodyAcc-","Fourier Linear Acceleration-",names(tidyValues))
colnames(tidyValues) <- sub("fBodyAccMag-","Fourier Linear Acceleration Magnitude-",names(tidyValues))
colnames(tidyValues) <- sub("fBodyAccJerk-","Fourier Linear Jerk-",names(tidyValues))
colnames(tidyValues) <- sub("fBodyAccJerkMag-","Fourier Linear Jerk Magnitude-",names(tidyValues))
colnames(tidyValues) <- sub("fBodyGyro-","Fourier Angular Velocity-",names(tidyValues))
colnames(tidyValues) <- sub("fBodyGyroMag-","Fourier Angular Velocity Magnitude-",names(tidyValues))
colnames(tidyValues) <- sub("fBodyGyroJerkMag-","Fourier Angular Jerk Magnitude-",names(tidyValues))
colnames(tidyValues) <- sub("std", "stddev", names(tidyValues))
?match.names
?rbind
rbind(valuesTest, valuesTrain)
identical(names(valuesTest), names(valuesTest))
names(valuesTest) == names(valuesTrain)
library(readr)
library(dplyr)
## Load files
pathToFile <- c("/Users/AnchBot/Dropbox/Third Plateau/Management/HR/Staff Files/Ari 2.0/Professional Development/Data Science Specialization/datasciencecoursera/Getting and Cleaning Data Programming Assignment/UCI HAR Dataset")
subjectTest <- read_table(paste(pathToFile, "/test/subject_test.txt", sep="")
, col_names = FALSE)
valuesTest <- read_table(paste(pathToFile, "/test/X_test.txt", sep=""),
col_names = FALSE)
activitiesTest <- read_table(paste(pathToFile, "/test/y_test.txt", sep=""),
col_names = FALSE)
subjectTrain <- read_table(paste(pathToFile, "/train/subject_train.txt",
sep=""), col_names = FALSE)
valuesTrain <- read_table(paste(pathToFile, "/train/X_train.txt", sep=""),
col_names = FALSE)
activitiesTrain <- read_table(paste(pathToFile, "/train/y_train.txt", sep=""),
col_names = FALSE)
activityLabels <- read_table(paste(pathToFile, "/activity_labels.txt", sep=""),
col_names = FALSE)
rawVariableNames <- read_table(paste(pathToFile, "/features.txt", sep=""),
col_names = FALSE)
## Find variable names
splitNames <- strsplit(rawVariableNames[[1]], ". ")
secondElement <- function(x){x[2]}
cleanVariableNames <- sapply(splitNames, secondElement)
## Apply variable names
colnames(valuesTest) <- cleanVariableNames
colnames(subjectTest) <- c("Subject Number")
colnames(activitiesTest) <- c("Activity")
colnames(valuesTrain) <- cleanVariableNames
colnames(subjectTrain) <- c("Subject Number")
colnames(activitiesTrain) <- c("Activity")
## Merge dataframes
valuesTest <- cbind(subjectTest, activitiesTest, valuesTest)
valuesTrain <- cbind(subjectTrain, activitiesTrain, valuesTrain)
values <- rbind(valuesTest, valuesTrain)
## Extract mean and standard deviation
tidyValues <- cbind(values[,1:2], values[,grep("mean", names(values))],
values[,grep("std", names(values))])
## Fix Activity Names
tidyValues["Activity"] <- activityLabels[ match(tidyValues[['Activity']],
activityLabels[['X1']] )
, 'X2']
## Replace Variable Names
colnames(tidyValues) <- sub("tBodyAcc-","Linear Acceleration-",names(tidyValues))
colnames(tidyValues) <- sub("tBodyAccMag-","Linear Acceleration Magnitude-",names(tidyValues))
colnames(tidyValues) <- sub("tBodyAccJerk-","Linear Jerk-",names(tidyValues))
colnames(tidyValues) <- sub("tBodyAccJerkMag-","Linear Jerk Magnitude-",names(tidyValues))
colnames(tidyValues) <- sub("tGravityAcc-","Gravitational Acceleration-",names(tidyValues))
colnames(tidyValues) <- sub("tGravityAccMag-","Gravitational Acceleration Magnitude-",names(tidyValues))
colnames(tidyValues) <- sub("tBodyGyro-","Angular Velocity-",names(tidyValues))
colnames(tidyValues) <- sub("tBodyGyroMag-","Angular Velocity Magnitude-",names(tidyValues))
colnames(tidyValues) <- sub("tBodyGyroJerk-","Angular Jerk-",names(tidyValues))
colnames(tidyValues) <- sub("tBodyGyroJerkMag-","Angular Jerk Magnitude-",names(tidyValues))
colnames(tidyValues) <- sub("fBodyAcc-","Fourier Linear Acceleration-",names(tidyValues))
colnames(tidyValues) <- sub("fBodyAccMag-","Fourier Linear Acceleration Magnitude-",names(tidyValues))
colnames(tidyValues) <- sub("fBodyAccJerk-","Fourier Linear Jerk-",names(tidyValues))
colnames(tidyValues) <- sub("fBodyAccJerkMag-","Fourier Linear Jerk Magnitude-",names(tidyValues))
colnames(tidyValues) <- sub("fBodyGyro-","Fourier Angular Velocity-",names(tidyValues))
colnames(tidyValues) <- sub("fBodyGyroMag-","Fourier Angular Velocity Magnitude-",names(tidyValues))
colnames(tidyValues) <- sub("fBodyGyroJerkMag-","Fourier Angular Jerk Magnitude-",names(tidyValues))
colnames(tidyValues) <- sub("std", "stddev", names(tidyValues))
names(tidyValues)
tidyValues[1:6,1:3]
tidyValues[1:26,1:3]
tidyValues[1:56,1:3]
tidyValues[1:56,1:4]
?group_by
separated <- group_by(tidyValues, `Subject Number`, Activity)
summarize(separated)
separated[1:3,1:6]
summarize(separated, mean("Linear Accleration"))
summarize(separated, mean("Linear Acceleration-mean()-X"))
?summarize
separated <- group_by(tidyValues, `Subject Number`, `Activity``)
separated <- group_by(tidyValues, `Subject Number`, `Activity`)
separated
summarize(separated, mean(`Angular Jerk-mean()-X`))
summarize(separated, mean(`Angular Jerk-mean()-X`))
summarize(separated, mean = mean(`Angular Jerk-mean()-X`))
tidyValues[1:4,1:4]
tidyValues[1:24,1:4]
tidyValues[1:30,1:4]
tidyValues[1:40,1:4]
tidyValues[1:70,1:4]
55-32
test <- c("mean = mean(`Angular Jerk-mean()-X`)")
summarize(separated, test)
aggdata <-aggregate(tidyValues, by=list(Subject Number,Activity),
FUN=mean, na.rm=TRUE)
aggdata <-aggregate(tidyValues, by=list(Subject Number,Activity), FUN=mean, na.rm=TRUE)
aggdata <-aggregate(tidyValues, by=list(tidyValues$`Subject Number`,tidyValues$Activity), FUN=mean, na.rm=TRUE)
aggdata
head(aggdata)
aggdata[1:12,1:4]
aggdata[1:32,1:4]
aggdata[1:42,1:4]
aggdata[1:42,1:6]
?aggregate
names(aggdata)
aggdata <-aggregate(tidyValues, by=list(Activity = tidyValues$Activity, Subject Number = tidyValues$`Subject Number`), FUN=mean, na.rm=TRUE)
aggdata <-aggregate(tidyValues, by=list(Activity = tidyValues$Activity, Subject_Number = tidyValues$`Subject Number`), FUN=mean, na.rm=TRUE)
warnings()
str(aggdata)
aggdata[1:20,1:6]
is.na(tidyValues[,60])
table(is.na(tidyValues[,60]))
table(is.na(tidyValues))
aggdata <-aggregate(tidyValues[,3:81], by=list(Activity = tidyValues$Activity, Subject_Number = tidyValues$`Subject Number`), FUN=mean, na.rm=TRUE)
aggdata[1:10,1:4]
tidyValues
rm(list=ls())
library(readr)
library(readr)
library(dplyr)
## Load files
pathToFile <- c("/Users/AnchBot/Dropbox/Third Plateau/Management/HR/Staff Files/Ari 2.0/Professional Development/Data Science Specialization/datasciencecoursera/Getting and Cleaning Data Programming Assignment/UCI HAR Dataset")
subjectTest <- read_table(paste(pathToFile, "/test/subject_test.txt", sep="")
, col_names = FALSE)
valuesTest <- read_table(paste(pathToFile, "/test/X_test.txt", sep=""),
col_names = FALSE)
activitiesTest <- read_table(paste(pathToFile, "/test/y_test.txt", sep=""),
col_names = FALSE)
subjectTrain <- read_table(paste(pathToFile, "/train/subject_train.txt",
sep=""), col_names = FALSE)
valuesTrain <- read_table(paste(pathToFile, "/train/X_train.txt", sep=""),
col_names = FALSE)
activitiesTrain <- read_table(paste(pathToFile, "/train/y_train.txt", sep=""),
col_names = FALSE)
activityLabels <- read_table(paste(pathToFile, "/activity_labels.txt", sep=""),
col_names = FALSE)
rawVariableNames <- read_table(paste(pathToFile, "/features.txt", sep=""),
col_names = FALSE)
## Find variable names
splitNames <- strsplit(rawVariableNames[[1]], ". ")
secondElement <- function(x){x[2]}
cleanVariableNames <- sapply(splitNames, secondElement)
## Apply variable names
colnames(valuesTest) <- cleanVariableNames
colnames(subjectTest) <- c("Subject Number")
colnames(activitiesTest) <- c("Activity")
colnames(valuesTrain) <- cleanVariableNames
colnames(subjectTrain) <- c("Subject Number")
colnames(activitiesTrain) <- c("Activity")
## Merge dataframes
valuesTest <- cbind(subjectTest, activitiesTest, valuesTest)
valuesTrain <- cbind(subjectTrain, activitiesTrain, valuesTrain)
values <- rbind(valuesTest, valuesTrain)
## Extract mean and standard deviation
tidyValues <- cbind(values[,1:2], values[,grep("mean", names(values))],
values[,grep("std", names(values))])
## Fix Activity Names
tidyValues["Activity"] <- activityLabels[ match(tidyValues[['Activity']],
activityLabels[['X1']] )
, 'X2']
## Replace Variable Names
colnames(tidyValues) <- sub("tBodyAcc-","Linear Acceleration-",names(tidyValues))
colnames(tidyValues) <- sub("tBodyAccMag-","Linear Acceleration Magnitude-",names(tidyValues))
colnames(tidyValues) <- sub("tBodyAccJerk-","Linear Jerk-",names(tidyValues))
colnames(tidyValues) <- sub("tBodyAccJerkMag-","Linear Jerk Magnitude-",names(tidyValues))
colnames(tidyValues) <- sub("tGravityAcc-","Gravitational Acceleration-",names(tidyValues))
colnames(tidyValues) <- sub("tGravityAccMag-","Gravitational Acceleration Magnitude-",names(tidyValues))
colnames(tidyValues) <- sub("tBodyGyro-","Angular Velocity-",names(tidyValues))
colnames(tidyValues) <- sub("tBodyGyroMag-","Angular Velocity Magnitude-",names(tidyValues))
colnames(tidyValues) <- sub("tBodyGyroJerk-","Angular Jerk-",names(tidyValues))
colnames(tidyValues) <- sub("tBodyGyroJerkMag-","Angular Jerk Magnitude-",names(tidyValues))
colnames(tidyValues) <- sub("fBodyAcc-","Fourier Linear Acceleration-",names(tidyValues))
colnames(tidyValues) <- sub("fBodyAccMag-","Fourier Linear Acceleration Magnitude-",names(tidyValues))
colnames(tidyValues) <- sub("fBodyAccJerk-","Fourier Linear Jerk-",names(tidyValues))
colnames(tidyValues) <- sub("fBodyAccJerkMag-","Fourier Linear Jerk Magnitude-",names(tidyValues))
colnames(tidyValues) <- sub("fBodyGyro-","Fourier Angular Velocity-",names(tidyValues))
colnames(tidyValues) <- sub("fBodyGyroMag-","Fourier Angular Velocity Magnitude-",names(tidyValues))
colnames(tidyValues) <- sub("fBodyGyroJerkMag-","Fourier Angular Jerk Magnitude-",names(tidyValues))
colnames(tidyValues) <- sub("std", "stddev", names(tidyValues))
## Produce Tidy Dataset
tidyData <-aggregate(tidyValues[,3:81],
by=list(Activity = tidyValues$Activity,
Subject_Number = tidyValues$`Subject Number`),
FUN=mean, na.rm=TRUE)
names(tidyData)
?write.table
write.table(tidyData, "tidySamsungData.txt", row.names= FALSE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
names(tidyData)
